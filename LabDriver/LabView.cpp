// -*- C++ -*-
//
// generated by wxGlade 0.7.2 on Thu Oct 20 13:35:21 2016
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "LabView.h"
#include "MotorController.h"
#include "VoltageControl.h"
#include "VoltageControlNI.h"
#include "Panel.h"

// begin wxGlade: ::extracode
// end wxGlade

const double MMPERSTEP = 0.0050;
//const float STEPPERMM = STEPPERTURN/25.4; //TODO change this to be se from within the header dialog



MotorController* mot;
VoltageNI* volt;
VoltageControl* volt2;
Panel* panelConfig;



BigFrame::BigFrame(wxWindow* parent) : MainFrame(parent)
{
	//mot = new MotorController(3, 9600);
	volt = new VoltageNI();
}

void BigFrame::onQuit(wxCommandEvent& WXUNUSED(event))
{
	Close(true);
}
//
void BigFrame::yUpButtonClicked(wxCommandEvent & event)
{
	//distanceToMove = distanceBox->GetSelection();
	try
	{
		mot->stepMotor(2, distanceToMove);
	}
	catch (...)
	{ }

}

void BigFrame::yDownButtonClicked(wxCommandEvent & event)
{
	//distanceToMove = distanceBox->GetSelection();
	mot->stepMotor(2, -distanceToMove);

}

void BigFrame::xLeftButtonClicked(wxCommandEvent & event)
{
	//distanceToMove = distanceBox->GetSelection();
	mot->stepMotor(1, distanceToMove);

}

void BigFrame::xRightButtonClicked(wxCommandEvent & event)
{
	//distanceToMove = distanceBox->GetSelection();
	mot->stepMotor(1, -distanceToMove);

}

void BigFrame::homeButtonClicked(wxCommandEvent & event)
{
	//distanceToMove = distanceBox->GetSelection();
	mot->setZeroX();
	mot->setZeroY();
}

void BigFrame::goToHomeButtonClicked(wxCommandEvent & event)
{
	//distanceToMove = distanceBox->GetSelection();
	mot->goZero();
}

void BigFrame::distanceBoxClicked(wxCommandEvent & event)
{
	distanceToMove = convertDistance(distanceBox->GetSelection());
}
//
int BigFrame::convertDistance(int radioButton)
{
	int ret;
	switch (radioButton)
	{
	case 0:
		ret = (int) (0.01 / MMPERSTEP);
		break;
	case 1:
		ret = (int)(0.1 / MMPERSTEP);
		break;
	case 2:
		ret = (int)(1.0 / MMPERSTEP);
		break;
	case 3:
		ret = (int)(5.0 / MMPERSTEP);
		break;
	case 4:
		ret = (int)(10.0 / MMPERSTEP);
		break;
	default:
		ret = 0;
		break;
	}

	return ret;
}
//
//void MainFrame::scanChooser(wxCommandEvent & event)
//{
//	static int scanChosen = combo_box_1->GetSelection();
//
//	switch (scanChosen)
//	{
//	case 0:
//		scanType = "Free";
//		break;
//	case 1:
//		scanType = "PixelScan";
//		break;
//	case 2:
//		scanType = "PixelMap";
//		break;
//	default:
//		scanType = "None";
//		break;
//	}
//}

//wxStaticBoxSizer* test;

void BigFrame::toggleHV(wxCommandEvent& event)
{
	int voltageStatus = m_radioBox3->GetSelection();
	if (voltageStatus == 0)
	{
		string voltage = m_textCtrl22->GetLineText(0);

			volt->setVoltage(stoi(voltage));
			volt->voltageOn();

	}
	if (voltageStatus == 1)
		volt->voltageOff();
}

void BigFrame::setStartVoltage(wxCommandEvent& event)
{
	string voltage = m_textCtrl22->GetLineText(0);
	
}

void BigFrame::motorControllerConnectClicked(wxCommandEvent & event)
{
	static bool connected = false;

	if (!connected)
	{
		mot = new MotorController(3, 9600);
		connected = true;
	}
}

void BigFrame::motorControllerDisconnectClicked(wxCommandEvent & event)
{
	//mot->portClose();
}

void BigFrame::HVConnectClicked(wxCommandEvent & event)
{
	//volt = new VoltageNI();
}

void BigFrame::openPanelFrame(wxCommandEvent& event) 
{ 
	panelConfig = new Panel(this);
	panelConfig->Show(true);
}